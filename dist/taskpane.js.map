<<<<<<< HEAD
{"version":3,"file":"taskpane.js","mappings":";yBACA,IAAIA,EAAsB,CAAC,qPCA3B,ovNAaO,SAAeC,IAAG,+BAoBxB,kCApBM,uGAEGC,MAAMD,IAAG,6BAAC,WAAOE,GAAO,uEAUO,OAN7BC,EAAQD,EAAQE,SAASC,oBAGzBC,KAAK,WAGXH,EAAMI,OAAOC,KAAKC,MAAQ,SAAS,SAE7BP,EAAQQ,OAAM,OACpBC,QAAQC,IAAI,yBAAD,OAA0BT,EAAMU,QAAO,MAAK,2CACxD,mDAdc,IAcb,sDAEFF,QAAQG,MAAM,EAAD,IAAQ,wDAExB,wBCjCDf,EAAoBgB,EAAI,SAASC,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXlB,EAAoBoB,EAAEF,EAAYC,KAASnB,EAAoBoB,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAnB,EAAoBoB,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,EFQtGI,OAAOC,SAAQ,WACbC,SAASC,eAAe,gBAAgBC,MAAMC,QAAU,OACxDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,OACpDH,SAASC,eAAe,OAAOG,QAAUnC,CAC3C","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global console, document, Excel, Office */\r\n\r\n// The initialize function must be run each time a new page is loaded\r\nOffice.onReady(() => {\r\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n  document.getElementById(\"app-body\").style.display = \"flex\";\r\n  document.getElementById(\"run\").onclick = run;\r\n});\r\n\r\nexport async function run() {\r\n  try {\r\n    await Excel.run(async (context) => {\r\n      /**\r\n       * Insert your Excel code here\r\n       */\r\n      const range = context.workbook.getSelectedRange();\r\n\r\n      // Read the range address\r\n      range.load(\"address\");\r\n\r\n      // Update the fill color\r\n      range.format.fill.color = \"yellow\";\r\n\r\n      await context.sync();\r\n      console.log(`The range address was ${range.address}.`);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["__webpack_require__","run","Excel","context","range","workbook","getSelectedRange","load","format","fill","color","sync","console","log","address","error","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Office","onReady","document","getElementById","style","display","onclick"],"sourceRoot":""}
=======
{"version":3,"file":"taskpane.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;+CCLA;AAAA;AAAA;AADA;AACA;AACA;AACA;;AAEA;;AAEA;AACAA,MAAM,CAACC,OAAO,CAAC,YAAM;EACnBC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;EAC9DH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;EAC1DH,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACG,OAAO,GAAGC,GAAG;AAC9C,CAAC,CAAC;AAEK,SAAeA,GAAG;EAAA;AAAA;AAoBxB;EAAA,kEApBM;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,OAEGC,KAAK,CAACD,GAAG;YAAA,sEAAC,iBAAOE,OAAO;cAAA;cAAA;gBAAA;kBAAA;oBAC5B;AACN;AACA;oBACYC,KAAK,GAAGD,OAAO,CAACE,QAAQ,CAACC,gBAAgB,EAAE,EAEjD;oBACAF,KAAK,CAACG,IAAI,CAAC,SAAS,CAAC;;oBAErB;oBACAH,KAAK,CAACI,MAAM,CAACC,IAAI,CAACC,KAAK,GAAG,QAAQ;oBAAC;oBAAA,OAE7BP,OAAO,CAACQ,IAAI,EAAE;kBAAA;oBACpBC,OAAO,CAACC,GAAG,iCAA0BT,KAAK,CAACU,OAAO,OAAI;kBAAC;kBAAA;oBAAA;gBAAA;cAAA;YAAA,CACxD;YAAA;cAAA;YAAA;UAAA,IAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAEFF,OAAO,CAACG,KAAK,cAAO;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CAExB;EAAA;AAAA,C","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/make namespace object","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\n  document.getElementById(\"app-body\").style.display = \"flex\";\n  document.getElementById(\"run\").onclick = run;\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Office","onReady","document","getElementById","style","display","onclick","run","Excel","context","range","workbook","getSelectedRange","load","format","fill","color","sync","console","log","address","error"],"sourceRoot":""}
>>>>>>> 73fb9fee381afe1e20f55c280296891c2bd72dab
