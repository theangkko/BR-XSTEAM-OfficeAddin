{"version":3,"file":"functions.js","mappings":"yBAgFAA,gBAAgBC,UAAU,OApEnB,SAAaC,EAAOC,GACzB,OAAOD,EAAQC,CACjB,IAmEAH,gBAAgBC,UAAU,SA5DnB,SAAeG,GACpB,IAAMC,EAAQC,aAAY,WACxB,IAAMC,GAcD,IAAIC,MAAOC,qBAbhBL,EAAWM,UAAUH,EACvB,GAAG,KAEHH,EAAWO,WAAa,WACtBC,cAAcP,EAChB,CACF,IAoDAL,gBAAgBC,UAAU,aApCnB,SAAmBY,EAAaT,GACrC,IAAIU,EAAS,EACPT,EAAQC,aAAY,WACxBQ,GAAUD,EACVT,EAAWM,UAAUI,EACvB,GAAG,KAEHV,EAAWO,WAAa,WACtBC,cAAcP,EAChB,CACF,IA2BAL,gBAAgBC,UAAU,OAnBnB,SAAoBc,GAGzB,OAFAC,QAAQC,IAAIF,GAELA,CACT,IAgBAf,gBAAgBC,UAAU,UARnB,SAAgBC,GACrB,OC3EK,SAAsBA,GAC3B,OAAOA,EAAQ,CACjB,CDyESgB,CAAahB,EACtB,G","sources":["webpack://excel-custom-functions-js/./src/functions/functions.js","webpack://excel-custom-functions-js/./src/functions/functionsIF97.js"],"sourcesContent":["import \"./functionsIF97.js\";\nimport { addtwofromJS } from \"./functionsIF97.js\";\n\n/* global clearInterval, console, setInterval */\n\n/**\n * Add two numbers\n * @customfunction\n * @param {number} first First number\n * @param {number} second Second number\n * @returns {number} The sum of the two numbers.\n */\nexport function add(first, second) {\n  return first + second;\n}\n\n/**\n * Displays the current time once a second\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n */\nexport function clock(invocation) {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time\n * @returns {string} String with the current time formatted for the current locale.\n */\nexport function currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param {number} incrementBy Amount to increment\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n */\nexport function increment(incrementBy, invocation) {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param {string} message String to write.\n * @returns String to write.\n */\nexport function logMessage(message) {\n  console.log(message);\n\n  return message;\n}\n\n/**\n * Add two Import other JS\n * @customfunction\n * @param {number} first First number\n * @returns {number} The add numbers.\n */\nexport function addtwo(first) {\n  return addtwofromJS(first);\n}\n\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"ADDTWO\", addtwo);","// functionsIF97.js\n\nexport function addtwofromJS(first) {\n  return first + 5;\n}\n"],"names":["CustomFunctions","associate","first","second","invocation","timer","setInterval","time","Date","toLocaleTimeString","setResult","onCanceled","clearInterval","incrementBy","result","message","console","log","addtwofromJS"],"sourceRoot":""}