{"version":3,"file":"functions.js","mappings":";;;;;;;;;;;;;;AAAA;;AAEO,SAASA,YAAY,CAACC,KAAK,EAAE;EAClC,OAAOA,KAAK,GAAG,CAAC;AAClB;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACN4B;AACsB;;AAElD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,GAAG,CAACD,KAAK,EAAEE,MAAM,EAAE;EACjC,OAAOF,KAAK,GAAGE,MAAM;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,KAAK,CAACC,UAAU,EAAE;EAChC,IAAMC,KAAK,GAAGC,WAAW,CAAC,YAAM;IAC9B,IAAMC,IAAI,GAAGC,WAAW,EAAE;IAC1BJ,UAAU,CAACK,SAAS,CAACF,IAAI,CAAC;EAC5B,CAAC,EAAE,IAAI,CAAC;EAERH,UAAU,CAACM,UAAU,GAAG,YAAM;IAC5BC,aAAa,CAACN,KAAK,CAAC;EACtB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACO,SAASG,WAAW,GAAG;EAC5B,OAAO,IAAII,IAAI,EAAE,CAACC,kBAAkB,EAAE;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,SAAS,CAACC,WAAW,EAAEX,UAAU,EAAE;EACjD,IAAIY,MAAM,GAAG,CAAC;EACd,IAAMX,KAAK,GAAGC,WAAW,CAAC,YAAM;IAC9BU,MAAM,IAAID,WAAW;IACrBX,UAAU,CAACK,SAAS,CAACO,MAAM,CAAC;EAC9B,CAAC,EAAE,IAAI,CAAC;EAERZ,UAAU,CAACM,UAAU,GAAG,YAAM;IAC5BC,aAAa,CAACN,KAAK,CAAC;EACtB,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASY,UAAU,CAACC,OAAO,EAAE;EAClCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAEpB,OAAOA,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,OAAO,CAACrB,KAAK,EAAE;EAC7B,OAAOD,+DAAY,CAACC,KAAK,CAAC;AAC5B;AAEAsB,eAAe,CAACC,SAAS,CAAC,KAAK,EAAEtB,GAAG,CAAC;AACrCqB,eAAe,CAACC,SAAS,CAAC,OAAO,EAAEpB,KAAK,CAAC;AACzCmB,eAAe,CAACC,SAAS,CAAC,WAAW,EAAET,SAAS,CAAC;AACjDQ,eAAe,CAACC,SAAS,CAAC,KAAK,EAAEN,UAAU,CAAC;AAC5CK,eAAe,CAACC,SAAS,CAAC,SAAS,EAAEF,OAAO,CAAC,C","sources":["webpack://excel-custom-functions-js/./src/functions/functionsIF97.js","webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/make namespace object","webpack://excel-custom-functions-js/./src/functions/functions.js"],"sourcesContent":["// functionsIF97.js\n\nexport function addtwofromJS(first) {\n  return first + 5;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./functionsIF97.js\";\nimport { addtwofromJS } from \"./functionsIF97.js\";\n\n/* global clearInterval, console, setInterval */\n\n/**\n * Add two numbers\n * @customfunction\n * @param {number} first First number\n * @param {number} second Second number\n * @returns {number} The sum of the two numbers.\n */\nexport function add(first, second) {\n  return first + second;\n}\n\n/**\n * Displays the current time once a second\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n */\nexport function clock(invocation) {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time\n * @returns {string} String with the current time formatted for the current locale.\n */\nexport function currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param {number} incrementBy Amount to increment\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n */\nexport function increment(incrementBy, invocation) {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param {string} message String to write.\n * @returns String to write.\n */\nexport function logMessage(message) {\n  console.log(message);\n\n  return message;\n}\n\n/**\n * Add two Import other JS\n * @customfunction\n * @param {number} first First number\n * @returns {number} The add numbers.\n */\nexport function addfive(first) {\n  return addtwofromJS(first);\n}\n\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"ADDFIVE\", addfive);"],"names":["addtwofromJS","first","add","second","clock","invocation","timer","setInterval","time","currentTime","setResult","onCanceled","clearInterval","Date","toLocaleTimeString","increment","incrementBy","result","logMessage","message","console","log","addfive","CustomFunctions","associate"],"sourceRoot":""}